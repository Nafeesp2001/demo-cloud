pipeline {
    agent any

    environment {
        AWS_REGION = "us-west-1"
        LAMBDA_FUNCTION_NAME = "etl_lambda"
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git credentialsId: 'github-credentials', url: 'https://github.com/Nafeesp2001/demo-cloud.git', branch: 'main'
                }
            }
        }

        stage('Fetch AWS Credentials') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY'),
                        string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_KEY')
                    ]) {
                        echo "AWS Credentials Loaded Successfully!"
                        env.AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY
                        env.AWS_SECRET_ACCESS_KEY = AWS_SECRET_KEY
                    }
                }
            }
        }

        stage('Deploy with Terraform') {
            steps {
                script {
                    echo "Running Terraform..."
                    dir('terraform') {
                        sh '''
                        terraform init
                        terraform apply -auto-approve
                        '''
                    }
                }
            }
        }

        stage('Fetch S3 Bucket Name from Terraform') {
            steps {
                script {
                    echo "Fetching S3 bucket name from Terraform output..."
                    env.S3_BUCKET = sh(script: "cd terraform && terraform output -raw s3_bucket_name", returnStdout: true).trim()
                    echo "S3 Bucket Name: ${env.S3_BUCKET}"
                }
            }
        }

        stage('Upload to S3') {
            steps {
                script {
                    echo "Uploading sample_data.json to S3 bucket: ${env.S3_BUCKET}..."
                    sh '''
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    aws s3 cp sample_data.json s3://${S3_BUCKET}/
                    '''
                }
            }
        }

        stage('Invoke AWS Lambda') {
            steps {
                script {
                    echo "Invoking AWS Lambda function..."
                    sh '''
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    aws lambda invoke --function-name ${LAMBDA_FUNCTION_NAME} --payload '{}' response.json
                    cat response.json
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline executed successfully!"
        }
        failure {
            echo "❌ Pipeline failed! Check logs for errors."
        }
    }
}
